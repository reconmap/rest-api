<?php declare(strict_types=1);

namespace Reconmap\Repositories;

use Reconmap\DatabaseTestCase;
use Reconmap\Models\VulnerabilityCategory;

class VulnerabilityCategoryRepositoryTest extends DatabaseTestCase
{
    private VulnerabilityCategoryRepository $subject;

    public function setUp(): void
    {
        $db = $this->getDatabaseConnection();
        $this->subject = new VulnerabilityCategoryRepository($db);
    }

    public function testFindAllWithoutChildrenReturnsAllParentRecords()
    {
        $categories = $this->subject->findAllWithoutChildren();
        $this->assertCount(12, $categories);

        $category = $categories[0];
        $this->assertArrayHasKey('id', $category);
        $this->assertArrayHasKey('name', $category);
        $this->assertArrayHasKey('description', $category);
    }

    public function testFindAllChildrenReturnsCorrectRecords()
    {
        $categories = $this->subject->findAllChildren(14);
        $this->assertCount(10, $categories);

        $category = $categories[0];
        $this->assertArrayHasKey('id', $category);
        $this->assertArrayHasKey('name', $category);
        $this->assertArrayHasKey('description', $category);
    }
    
    public function testInsert()
    {
        $category = new VulnerabilityCategory();
        $category->name = 'N.Ame';
        $category->description = 'C.Ategory';

        $categoryId = $this->subject->insert($category);
        $this->assertIsInt($categoryId);
    }

    public function testDeleteById_NonExistingId()
    {
        $this->assertFalse($this->subject->deleteById(150));
    }

    public function testDeleteById_ExistingId()
    {
        $this->assertTrue($this->subject->deleteById(50));
    }
}
