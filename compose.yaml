services:
  redis:
    container_name: rmap-redis
    image: redis:7.4
    command: redis-server --requirepass REconDIS
    ports:
      - "6379:6379"
    volumes:
      - ./data-redis:/data

  mysql:
    container_name: rmap-mysql
    image: ghcr.io/reconmap/rest-api-db:latest
    build:
      context: ./
      dockerfile: docker/mysql/Dockerfile
    volumes:
      - ./data-mysql:/var/lib/mysql
      - ./database:/docker-entrypoint-initdb.d:ro
      - ./docker/mysql/overrides.cnf:/etc/mysql/conf.d/overrides.cnf:ro
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: reconmuppet
    healthcheck:
      test: "mysql -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD mysql -e 'SELECT 1;'"
      interval: 5s
      timeout: 10s
      retries: 3

  keycloak:
    container_name: rmap-keycloak
    image: ghcr.io/reconmap/keycloak-custom:latest
    command: "start --hostname=http://localhost:8080 --proxy-headers xforwarded --http-enabled true --import-realm"
    environment:
      KEYCLOAK_WELCOME_THEME: "reconmap-theme"
      KEYCLOAK_DEFAULT_THEME: "reconmap-theme"
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_DB_VENDOR: MYSQL
      KC_DB: mysql
      KC_DB_URL: "jdbc:mysql://rmap-mysql/keycloak"
      KC_DB_DATABASE: keycloak
      KC_DB_USERNAME: keycloaker
      KC_DB_PASSWORD: keycloaked
      KC_LOG_LEVEL: INFO
      VAR_ADMIN_CLI_SECRET: "xxxxxxxxxxxxxxxxxxyyyyyyyyyyyyyy"
      VAR_WEB_CLIENT_URL: "http://localhost:5500"
    ports:
      - "8080:8080"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "exec 3<>/dev/tcp/127.0.0.1/9000;echo -e 'GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n' >&3;if [ $? -eq 0 ]; then echo 'Healthcheck Successful';exit 0;else echo 'Healthcheck Failed';exit 1;fi;",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      mysql:
        condition: service_healthy

  api:
    container_name: rmap-api
    image: ghcr.io/reconmap/rest-api:latest
    build:
      context: ./
      dockerfile: docker/api/Dockerfile
    volumes:
      - "./config.json:/var/www/webapp/config.json"
      - "./logs:/var/www/webapp/logs"
      - "./data:/var/www/webapp/data"
      - "./composer.json:/var/www/webapp/composer.json"
      - "./composer.lock:/var/www/webapp/composer.lock"
      - "./vendor:/var/www/webapp/vendor"
      - "./public:/var/www/webapp/public"
      - "./docs/openapi.yaml:/var/www/webapp/public/docs/openapi.yaml"
      - "./docs/schemas/:/var/www/webapp/public/docs/schemas/"
      - "./src:/var/www/webapp/src"
      - "./packages:/var/www/webapp/packages"
      - "./resources:/var/www/webapp/resources"
      - "./tests:/var/www/webapp/tests"
      - "./phpunit.xml.dist:/var/www/webapp/phpunit.xml.dist"
      - "./run-tests.sh:/var/www/webapp/run-tests.sh"
      - "./database:/var/www/webapp/database"
    ports:
      - "5510:5510"
    depends_on:
      mysql:
        condition: service_healthy
