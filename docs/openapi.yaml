openapi: 3.0.3

info:
  title: Reconmap API
  description: Reconmap API documentation
  version: 1.4.0

servers:
  - url: 'http://localhost:5510'
  - url: 'https://demo.api.reconmap.com'

security:
  - BearerAuth: [ ]

paths:
  /users/login:
    post:
      tags:
        - Auth
      security: [ ]
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: Succesful login response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
        '403':
          description: Unsuccesful login response
  /users/logout:
    post:
      tags:
        - Auth
      description: Terminate user session
      responses:
        '200':
          description: User session terminated

  /clients:
    post:
      tags:
        - Clients
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/Client.yaml'
      responses:
        '201':
          description: Client successfully created response
          content:
            application/json:
              schema:
                $ref: './schemas/Client.yaml'
    get:
      tags:
        - Clients
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK
  '/clients/{id}':
    put:
      tags:
        - Clients
      security:
        - BearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/resourceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/Client.yaml'
      responses:
        '200':
          description: Client successfully created response
          content:
            application/json:
              schema:
                $ref: './schemas/Client.yaml'
    get:
      tags:
        - Clients
      parameters:
        - $ref: '#/components/parameters/resourceId'
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: Successfully retrieved
          content:
            application/json:
              schema:
                $ref: './schemas/Client.yaml'

  /commands:
    post:
      tags:
        - Commands
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Command'
      responses:
        '200':
          description: Command successfully created response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Command'
    get:
      tags:
        - Commands
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK
  /commands/outputs:
    post:
      tags:
        - Commands
      responses:
        200:
          description: OK
    get:
      tags:
        - Commands
      responses:
        200:
          description: OK
  '/commands/{id}':
    put:
      tags:
        - Commands
      security:
        - BearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/resourceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Command'
      responses:
        '200':
          description: Command successfully created response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Command'
    get:
      tags:
        - Commands
      parameters:
        - $ref: '#/components/parameters/resourceId'
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: Successfully retrieved

  /documents:
    get:
      tags:
        - Documents
      responses:
        200:
          description: OK
    post:
      tags:
        - Documents
      responses:
        200:
          description: OK
  '/documents/{id}':
    get:
      tags:
        - Documents
      parameters:
        - $ref: '#/components/parameters/resourceId'
      responses:
        200:
          description: OK
    put:
      tags:
        - Documents
      parameters:
        - $ref: '#/components/parameters/resourceId'
      responses:
        200:
          description: OK

  /notes:
    post:
      tags:
        - Notes
      responses:
        200:
          description: OK
    get:
      tags:
        - Notes
      responses:
        200:
          description: OK

  /organisations/root:
    put:
      description: "Updates the root organisation"
      tags:
        - Organisations
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organisation'
      responses:
        '200':
          description: Organisation successfully created response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation'
    get:
      tags:
        - Organisations
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation'

  /projects:
    get:
      tags:
        - Projects
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK
    post:
      tags:
        - Projects
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/Project.yaml'
      responses:
        '201':
          description: Project successfully created response
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  password:
                    type: string


  '/projects/{id}':
    get:
      tags:
        - Projects
      parameters:
        - $ref: '#/components/parameters/resourceId'
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: Successfully retrieved
          content:
            application/json:
              schema:
                $ref: './schemas/Project.yaml'

  '/projects/{id}/tasks':
    get:
      description: 'List all tasks for this project'
      tags:
        - Projects
      parameters:
        - $ref: '#/components/parameters/resourceId'
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: Successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './schemas/Task.yaml'

  /reports:
    get:
      tags:
        - Reports
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK
    post:
      tags:
        - Reports
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK

  /reports/preview:
    get:
      tags:
        - Reports
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK


  '/reports/{id}/send':
    post:
      tags:
        - Reports
      parameters:
        - $ref: '#/components/parameters/resourceId'
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK

  '/reports/{id}/configuration':
    get:
      tags:
        - Reports
      parameters:
        - $ref: '#/components/parameters/resourceId'
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK
    put:
      tags:
        - Reports
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK

  /system/usage:
    get:
      tags:
        - System
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK

  /system/health:
    get:
      description: Returns information about the health of the system.
      tags:
        - System
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  attachmentsDirectory:
                    type: object
                  logsDirectory:
                    type: string
                  examples:
                    default:
                      attachmentsDirectory:
                        location: '/var/www/webapp/data/attachments/'
                        exists: true
                        writeable: true
                      logsDirectory:
                        location: '/var/www/webapp/logs'
                        exists: true
                        writeable: true
                      dbConnection:
                        ping: true

  /system/logs:
    get:
      tags:
        - System
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string

  /system/data:
    get:
      tags:
        - System
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK
    post:
      tags:
        - System
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK

  /system/integrations:
    get:
      tags:
        - System
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK


  /targets:
    get:
      tags:
        - Targets
      responses:
        200:
          description: OK
    patch:
      tags:
        - Targets
      responses:
        200:
          description: OK
    post:
      tags:
        - Targets
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Target'
      responses:
        '201':
          description: Target successfully created response
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  password:
                    type: string
  '/targets/{id}':
    get:
      tags:
        - Targets
      parameters:
        - $ref: '#/components/parameters/resourceId'
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: Successfully retrieved

  /tasks:
    post:
      tags:
        - Tasks
      responses:
        200:
          description: OK
    patch:
      tags:
        - Tasks
      responses:
        200:
          description: OK
    get:
      tags:
        - Tasks
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK
  '/tasks/{id}':
    get:
      tags:
        - Tasks
      parameters:
        - $ref: '#/components/parameters/resourceId'
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: Successfully retrieved
    patch:
      tags:
        - Tasks
      responses:
        200:
          description: OK

  /users:
    get:
      tags:
        - Users
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: Succesful login response
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  password:
                    type: string
    patch:
      tags:
        - Users
      responses:
        200:
          description: OK
    post:
      tags:
        - Users
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User successfully created response
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  password:
                    type: string
  '/users/{id}':
    get:
      tags:
        - Users
      parameters:
        - $ref: '#/components/parameters/resourceId'
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: Succesful login response
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  password:
                    type: string
    patch:
      tags:
        - Users
      parameters:
        - $ref: '#/components/parameters/resourceId'
      responses:
        200:
          description: OK

  '/users/{id}/activity':
    get:
      tags:
        - Users
      responses:
        200:
          description: OK
  '/users/{id}/password':
    patch:
      tags:
        - Users
      responses:
        200:
          description: OK

  /vulnerabilities:
    get:
      tags:
        - Vulnerabilities
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK
    patch:
      tags:
        - Vulnerabilities
      responses:
        200:
          description: OK
    post:
      tags:
        - Vulnerabilities
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/Vulnerability.yaml'
      responses:
        '201':
          description: Vulnerability successfully created response
          content:
            application/json:
              schema:
                $ref: './schemas/Vulnerability.yaml'

  '/vulnerabilities/{id}':
    get:
      tags:
        - Vulnerabilities
      parameters:
        - $ref: '#/components/parameters/resourceId'
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: Successfully retrieved
    put:
      tags:
        - Vulnerabilities
      parameters:
        - $ref: '#/components/parameters/resourceId'
      responses:
        200:
          description: OK
    patch:
      tags:
        - Vulnerabilities
      parameters:
        - $ref: '#/components/parameters/resourceId'
      responses:
        200:
          description: OK

  /vulnerabilities/categories:
    get:
      tags:
        - Vulnerability categories
      responses:
        200:
          description: OK
    post:
      tags:
        - Vulnerability categories
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/VulnerabilityCategory.yaml'
      responses:
        '201':
          description: Vulnerability successfully created response
          content:
            application/json:
              schema:
                $ref: './schemas/VulnerabilityCategory.yaml'

  /vulnerabilities/stats:
    get:
      tags:
        - Vulnerabilities
      responses:
        200:
          description: OK

components:

  securitySchemes:

    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:

    Attachment:
      type: object
      required:
        - client_file_name
      properties:
        id:
          type: integer
        client_file_name:
          type: string
        file_size:
          type: integer
        file_mimetype:
          type: string
        file_hash:
          type: string

    Organisation:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
        name:
          type: string
        url:
          type: string
        contactName:
          type: string
        contactEmail:
          type: string
        contactPhone:
          type: string

    Command:
      type: object
      required:
        - short_name
        - docker_image
        - arguments
      properties:
        id:
          type: integer
        short_name:
          type: string
        docker_image:
          type: string
        arguments:
          type: string

    User:
      type: object
      required:
        - name
        - password
        - email
        - role
      properties:
        id:
          type: integer
        name:
          type: string
        password:
          type: string
        email:
          type: string
        role:
          type: string

    Target:
      type: object
      required:
        - projectId
        - name
        - kind
      properties:
        id:
          type: integer
        projectId:
          type: integer
        name:
          type: string
        kind:
          type: string

  parameters:
    resourceId:
      name: id
      in: path
      required: true
      description: Numeric resource identifier
      schema:
        type: integer
        format: int64
